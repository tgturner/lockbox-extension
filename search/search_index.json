{
    "docs": [
        {
            "location": "/", 
            "text": "Lockbox Extension\n\n\nThis is just one component of the Lockbox product. Please see the\n\nLockbox website\n for more documentation and context.\n\n\nClick below to install the Lockbox extension:\n\n\nInstall\n\n\nNote: This is a rapidly evolving prototype that will change. Any data stored\nis not guaranteed to be retained in future updates.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#lockbox-extension", 
            "text": "This is just one component of the Lockbox product. Please see the Lockbox website  for more documentation and context.  Click below to install the Lockbox extension:  Install  Note: This is a rapidly evolving prototype that will change. Any data stored\nis not guaranteed to be retained in future updates.", 
            "title": "Lockbox Extension"
        }, 
        {
            "location": "/install/", 
            "text": "Installing the Lockbox extension\n\n\nInstalling dependencies\n\n\nTo \ninstall the project dependencies\n, you can run:\n\n\nnpm install\n\n\n\n\nBuilding the source code\n\n\nTo \nbuild the project\n, you can run:\n\n\nnpm run build\n\n\n\n\nThis puts all the necessary files in the \ndist/\n directory, which you can then\ntemporarily load into Firefox (e.g. \nabout:debugging\n).\n\n\nBuilding the extension\n\n\nTo \nbuild an extension .xpi\n, you can run:\n\n\nnpm run package\n\n\n\n\n:warning: The resulting add-on is unsigned and likely won't work on release\nversions of Firefox. You can flip the \nxpinstall.signatures.required\n preference\non other channels accordingly.\n\n\n:warning: In preparation for Firefox 57, legacy extensions are also disabled. So\nyou'll need to flip the \nextensions.legacy.enabled\n preference, too.\n\n\nRunning the extension\n\n\nTo \nrun the extension in a Firefox Nightly\n browser, you can run:\n\n\nnpm run run -- -b nightly\n\n\n\n\nThis will automatically create a fresh new user profile that will not persist\nbetween runs. This means the data will be lost every time.\n\n\nRunning the extension with a persistent profile\n\n\nTo \nrun the extension with a profile that persists\n between runs, you can\ncreate a new profile by browsing to \nabout:profiles\n.\n\n\nOnce you have a new profile created (no matter the location), you can tell jpm\n(via npm) to run using that profile \nand\n not to copy the profile temporarily\nso that any changes (e.g. adding new entries) will be saved:\n\n\nnpm run run -- -p PROFILE --no-copy\n\n\n\n\nThe PROFILE value may be a profile name or the path to the profile.\n\n\nNow, when you run using this profile, any data or settings you make to the\nbrowser itself or in Lockbox will be available for future runs.\n\n\nSetting npm run flags\n\n\nTo specify flags for \nrun\n to use regularly, use \nnpm config set jpm_runflags\n:\n\n\nnpm config set jpm_runflags=\n-b nightly -p PROFILE --no-copy\n\n\n\n\n\nThis way if you want to always test locally using an existing profile (with\nexample data) using Firefox Nightly, you can just run (without adding flags):\n\n\nnpm run run", 
            "title": "Installing"
        }, 
        {
            "location": "/install/#installing-the-lockbox-extension", 
            "text": "", 
            "title": "Installing the Lockbox extension"
        }, 
        {
            "location": "/install/#installing-dependencies", 
            "text": "To  install the project dependencies , you can run:  npm install", 
            "title": "Installing dependencies"
        }, 
        {
            "location": "/install/#building-the-source-code", 
            "text": "To  build the project , you can run:  npm run build  This puts all the necessary files in the  dist/  directory, which you can then\ntemporarily load into Firefox (e.g.  about:debugging ).", 
            "title": "Building the source code"
        }, 
        {
            "location": "/install/#building-the-extension", 
            "text": "To  build an extension .xpi , you can run:  npm run package  :warning: The resulting add-on is unsigned and likely won't work on release\nversions of Firefox. You can flip the  xpinstall.signatures.required  preference\non other channels accordingly.  :warning: In preparation for Firefox 57, legacy extensions are also disabled. So\nyou'll need to flip the  extensions.legacy.enabled  preference, too.", 
            "title": "Building the extension"
        }, 
        {
            "location": "/install/#running-the-extension", 
            "text": "To  run the extension in a Firefox Nightly  browser, you can run:  npm run run -- -b nightly  This will automatically create a fresh new user profile that will not persist\nbetween runs. This means the data will be lost every time.", 
            "title": "Running the extension"
        }, 
        {
            "location": "/install/#running-the-extension-with-a-persistent-profile", 
            "text": "To  run the extension with a profile that persists  between runs, you can\ncreate a new profile by browsing to  about:profiles .  Once you have a new profile created (no matter the location), you can tell jpm\n(via npm) to run using that profile  and  not to copy the profile temporarily\nso that any changes (e.g. adding new entries) will be saved:  npm run run -- -p PROFILE --no-copy  The PROFILE value may be a profile name or the path to the profile.  Now, when you run using this profile, any data or settings you make to the\nbrowser itself or in Lockbox will be available for future runs.", 
            "title": "Running the extension with a persistent profile"
        }, 
        {
            "location": "/install/#setting-npm-run-flags", 
            "text": "To specify flags for  run  to use regularly, use  npm config set jpm_runflags :  npm config set jpm_runflags= -b nightly -p PROFILE --no-copy   This way if you want to always test locally using an existing profile (with\nexample data) using Firefox Nightly, you can just run (without adding flags):  npm run run", 
            "title": "Setting npm run flags"
        }, 
        {
            "location": "/user-guide/", 
            "text": "Lockbox User Guide\n\n\nFirst things first, \ninstall the extension\n.\n\n\nCommands\n\n\n\n\nCtrl-Shift-L\n: open Lockbox editor (item management)", 
            "title": "User Guide"
        }, 
        {
            "location": "/user-guide/#lockbox-user-guide", 
            "text": "First things first,  install the extension .", 
            "title": "Lockbox User Guide"
        }, 
        {
            "location": "/user-guide/#commands", 
            "text": "Ctrl-Shift-L : open Lockbox editor (item management)", 
            "title": "Commands"
        }, 
        {
            "location": "/release-notes/", 
            "text": "Lockbox Release Notes\n\n\n0.1.3-alpha\n\n\nDate: 2017-11-29\n\n\nWhat's New\n\n\n\n\nWe added placeholder text into the item editor to help show what's expected  (\n#336\n)\n\n\nEvery time the \"Copy\" button is used we'll log a Telemetry event (\n#342\n)\n\n\n\n\nWhat's Fixed\n\n\n\n\nOur friendly monster looks a bit better on light backgrounds (\n#347\n)\n\n\nWe've updated some dependencies, including React, so that we're using and testing against the latest and greatest (\n#346\n) (\n#335\n)\n\n\n\n\nKnown Issues\n\n\n\n\nThis is pre-release software subject to change. Your data may not be retained.\n\n\nThere is no way to change your Lockbox master password. If you forget your master password, you'll need to start over fresh by either:\n\n\nOpening the this extension's Preferences and clicking the \"\n\ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5\n\" button; or\n\n\nUninstalling and re-installing the extension\n\n\nFirefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.\n\n\n\n\n0.1.2-alpha\n\n\nDate: 2017-11-13\n\n\nWhat's New\n\n\n\n\nInterface styles updated to more closely match Photon design language (\n#295\n) (\n#307\n)\n\n\nImproved user interface design on welcome screen and home page (\n#300\n)\n\n\nUpdated content throughout the interface to guide the user experience (\n#165\n)\n\n\n\n\nWhat's Fixed\n\n\n\n\nClicking the toolbar (browser action) icon would not open the editor if the editor was opened and the user changed the URL (\n#262\n)\n\n\nThe toolbar icon did not invert to light colors on dark themes (\n#306\n)\n\n\n\n\nKnown Issues\n\n\n\n\nThis is pre-release software subject to change. Your data may not be retained.\n\n\nThere is no way to change your Lockbox master password. If you forget your master password, you'll need to start over fresh by either:\n\n\nOpening the this extension's Preferences and clicking the \"\n\ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5\n\" button; or\n\n\nUninstalling and re-installing the extension\n\n\nFirefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.\n\n\n\n\n0.1.1-alpha1\n\n\nDate: 2017-11-01\n\n\nWhat's Fixed\n\n\n\n\nWe added language to the first-run experience to remind testers that this is pre-release software and both \nsubject to change and data may not be retained\n.\n\n\n\n\nKnown Issues\n\n\n\n\nThere is no way to change your Lockbox master password.  If you forget your master password, you'll need to start over fresh by either:\n\n\nOpening the this extension's Preferences and clicking the \"\n\ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5\n\" button; or\n\n\nUninstalling and re-installing the extension\n\n\nFirefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.\n\n\n\n\n0.1.1-alpha\n\n\nDate: 2017-10-30\n\n\nWhat's New\n\n\n\n\nWhen installing this extension, Firefox will no longer prompt to save logins. Any logins saved in Firefox are still there, and you can still use it to autofill login forms, but the browser will not prompt to save new ones. This feature will be re-enabled if you uninstall Lockbox, and can be manually changed by the user in Firefox's preferences.(\n#211\n)\n\n\nYou now have the ability to reset Lockbox and start from scratch.(\n#137\n)\n\n\nFront-end validation of fields in the editor (\n#207\n)\n\n\nNew Alpha installations can now happen from \nthis page\n versus the email distribution of the link which results in a blank page after install.\n\n\n\n\nWhat's Fixed\n\n\n\n\nImproved localization including page titles (\n#225\n) and default locale consistency (\n#140\n)\n\n\nShow/Hide password field no longer resizes the window (\n#179\n)\n\n\nModal dialogs behave more consistently and even keeps entered text if the modal closes (\n#162\n)\n\n\n\n\nKnown Issues\n\n\n\n\nThere is no way to change your Lockbox master password.  If you forget your master password, you'll need to start over fresh by either:\n\n\nOpening the this extension's Preferences and clicking the \"\n\ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5\n\" button; or\n\n\nUninstalling and re-installing the extension\n\n\nFirefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.\n\n\n\n\n0.1.0-alpha1\n\n\nDate: 2017-10-16\n\n\nWhat's New\n\n\nThis is a pre-release of the Lockbox password manager for internal Mozilla employees.\n\n\nThis starts as a signed Firefox extension where you can:\n\n\n\n\nCreate a Lockbox account with a master password to lock/unlock your data\n\n\nView entries\n\n\nSearch entries\n\n\nAdd, edit, and delete entries\n\n\nCopy username and password to clipboard\n\n\nSubmit feedback\n\n\n\n\nKnown Issues\n\n\n\n\nLockbox has only been tested on Firefox 57 and above.  Installing on Firefox 56 or lower may not function at all.\n\n\nThere is no way to reset your Lockbox master password. If you forget your master password, you'll need to start over fresh by uninstalling and re-installing this extension.\n\n\nThis is a Lockbox account, which stays local to your Firefox installation. There is no integration with Firefox accounts to sync (yet).", 
            "title": "Release Notes"
        }, 
        {
            "location": "/release-notes/#lockbox-release-notes", 
            "text": "", 
            "title": "Lockbox Release Notes"
        }, 
        {
            "location": "/release-notes/#013-alpha", 
            "text": "Date: 2017-11-29", 
            "title": "0.1.3-alpha"
        }, 
        {
            "location": "/release-notes/#whats-new", 
            "text": "We added placeholder text into the item editor to help show what's expected  ( #336 )  Every time the \"Copy\" button is used we'll log a Telemetry event ( #342 )", 
            "title": "What's New"
        }, 
        {
            "location": "/release-notes/#whats-fixed", 
            "text": "Our friendly monster looks a bit better on light backgrounds ( #347 )  We've updated some dependencies, including React, so that we're using and testing against the latest and greatest ( #346 ) ( #335 )", 
            "title": "What's Fixed"
        }, 
        {
            "location": "/release-notes/#known-issues", 
            "text": "This is pre-release software subject to change. Your data may not be retained.  There is no way to change your Lockbox master password. If you forget your master password, you'll need to start over fresh by either:  Opening the this extension's Preferences and clicking the \" \ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5 \" button; or  Uninstalling and re-installing the extension  Firefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.", 
            "title": "Known Issues"
        }, 
        {
            "location": "/release-notes/#012-alpha", 
            "text": "Date: 2017-11-13", 
            "title": "0.1.2-alpha"
        }, 
        {
            "location": "/release-notes/#whats-new_1", 
            "text": "Interface styles updated to more closely match Photon design language ( #295 ) ( #307 )  Improved user interface design on welcome screen and home page ( #300 )  Updated content throughout the interface to guide the user experience ( #165 )", 
            "title": "What's New"
        }, 
        {
            "location": "/release-notes/#whats-fixed_1", 
            "text": "Clicking the toolbar (browser action) icon would not open the editor if the editor was opened and the user changed the URL ( #262 )  The toolbar icon did not invert to light colors on dark themes ( #306 )", 
            "title": "What's Fixed"
        }, 
        {
            "location": "/release-notes/#known-issues_1", 
            "text": "This is pre-release software subject to change. Your data may not be retained.  There is no way to change your Lockbox master password. If you forget your master password, you'll need to start over fresh by either:  Opening the this extension's Preferences and clicking the \" \ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5 \" button; or  Uninstalling and re-installing the extension  Firefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.", 
            "title": "Known Issues"
        }, 
        {
            "location": "/release-notes/#011-alpha1", 
            "text": "Date: 2017-11-01", 
            "title": "0.1.1-alpha1"
        }, 
        {
            "location": "/release-notes/#whats-fixed_2", 
            "text": "We added language to the first-run experience to remind testers that this is pre-release software and both  subject to change and data may not be retained .", 
            "title": "What's Fixed"
        }, 
        {
            "location": "/release-notes/#known-issues_2", 
            "text": "There is no way to change your Lockbox master password.  If you forget your master password, you'll need to start over fresh by either:  Opening the this extension's Preferences and clicking the \" \ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5 \" button; or  Uninstalling and re-installing the extension  Firefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.", 
            "title": "Known Issues"
        }, 
        {
            "location": "/release-notes/#011-alpha", 
            "text": "Date: 2017-10-30", 
            "title": "0.1.1-alpha"
        }, 
        {
            "location": "/release-notes/#whats-new_2", 
            "text": "When installing this extension, Firefox will no longer prompt to save logins. Any logins saved in Firefox are still there, and you can still use it to autofill login forms, but the browser will not prompt to save new ones. This feature will be re-enabled if you uninstall Lockbox, and can be manually changed by the user in Firefox's preferences.( #211 )  You now have the ability to reset Lockbox and start from scratch.( #137 )  Front-end validation of fields in the editor ( #207 )  New Alpha installations can now happen from  this page  versus the email distribution of the link which results in a blank page after install.", 
            "title": "What's New"
        }, 
        {
            "location": "/release-notes/#whats-fixed_3", 
            "text": "Improved localization including page titles ( #225 ) and default locale consistency ( #140 )  Show/Hide password field no longer resizes the window ( #179 )  Modal dialogs behave more consistently and even keeps entered text if the modal closes ( #162 )", 
            "title": "What's Fixed"
        }, 
        {
            "location": "/release-notes/#known-issues_3", 
            "text": "There is no way to change your Lockbox master password.  If you forget your master password, you'll need to start over fresh by either:  Opening the this extension's Preferences and clicking the \" \ud83d\udca5\ud83d\udca3 Reset \ud83d\udca3\ud83d\udca5 \" button; or  Uninstalling and re-installing the extension  Firefox's default prompt to save logins is only disabled on new installs of this extension; updating Lockbox will not change your current Firefox preferences.", 
            "title": "Known Issues"
        }, 
        {
            "location": "/release-notes/#010-alpha1", 
            "text": "Date: 2017-10-16", 
            "title": "0.1.0-alpha1"
        }, 
        {
            "location": "/release-notes/#whats-new_3", 
            "text": "This is a pre-release of the Lockbox password manager for internal Mozilla employees.  This starts as a signed Firefox extension where you can:   Create a Lockbox account with a master password to lock/unlock your data  View entries  Search entries  Add, edit, and delete entries  Copy username and password to clipboard  Submit feedback", 
            "title": "What's New"
        }, 
        {
            "location": "/release-notes/#known-issues_4", 
            "text": "Lockbox has only been tested on Firefox 57 and above.  Installing on Firefox 56 or lower may not function at all.  There is no way to reset your Lockbox master password. If you forget your master password, you'll need to start over fresh by uninstalling and re-installing this extension.  This is a Lockbox account, which stays local to your Firefox installation. There is no integration with Firefox accounts to sync (yet).", 
            "title": "Known Issues"
        }, 
        {
            "location": "/contributing/", 
            "text": "Contributing\n\n\nThank you for considering and taking the time to contribute!\n\n\nThe following are guidelines for contributing to this project.\n\n\nCode of Conduct\n\n\nThis repository is governed by Mozilla's code of conduct and etiquette guidelines. For more details please see the \nMozilla Community Participation Guidelines\n and \nDeveloper Etiquette Guidelines\n.\n\n\nHow to Get Started\n\n\nPlease refer to installation and build instructions in the \ninstall documentation\n.\n\n\nHow to Report Bugs\n\n\nPlease open \na new issue in the GitHub repository\n with steps to reproduce the problem you're experiencing.\n\n\nBe sure to include as much information including screenshots, text output, and both your expected and actual results.\n\n\nHow to Request Enhancements\n\n\nFirst, please refer to the applicable \nGitHub project\n and search \nthe repository's GitHub issues\n to make sure your idea has not been (or is not still) considered.\n\n\nThen, please \ncreate a new issue in the GitHub repository\n describing your enhancement.\n\n\nBe sure to include as much detail as possible including step-by-step descriptions, specific examples, screenshots or mockups, and reasoning for why the enhancement might be worthwhile.\n\n\nPlease keep in mind, by opening an issue we provide no guarantee the enhancement will be implemented.", 
            "title": "Contributing"
        }, 
        {
            "location": "/contributing/#contributing", 
            "text": "Thank you for considering and taking the time to contribute!  The following are guidelines for contributing to this project.", 
            "title": "Contributing"
        }, 
        {
            "location": "/contributing/#code-of-conduct", 
            "text": "This repository is governed by Mozilla's code of conduct and etiquette guidelines. For more details please see the  Mozilla Community Participation Guidelines  and  Developer Etiquette Guidelines .", 
            "title": "Code of Conduct"
        }, 
        {
            "location": "/contributing/#how-to-get-started", 
            "text": "Please refer to installation and build instructions in the  install documentation .", 
            "title": "How to Get Started"
        }, 
        {
            "location": "/contributing/#how-to-report-bugs", 
            "text": "Please open  a new issue in the GitHub repository  with steps to reproduce the problem you're experiencing.  Be sure to include as much information including screenshots, text output, and both your expected and actual results.", 
            "title": "How to Report Bugs"
        }, 
        {
            "location": "/contributing/#how-to-request-enhancements", 
            "text": "First, please refer to the applicable  GitHub project  and search  the repository's GitHub issues  to make sure your idea has not been (or is not still) considered.  Then, please  create a new issue in the GitHub repository  describing your enhancement.  Be sure to include as much detail as possible including step-by-step descriptions, specific examples, screenshots or mockups, and reasoning for why the enhancement might be worthwhile.  Please keep in mind, by opening an issue we provide no guarantee the enhancement will be implemented.", 
            "title": "How to Request Enhancements"
        }, 
        {
            "location": "/metrics/", 
            "text": "Lockbox Metrics Plan\n\n\nLast Updated: Nov 28, 2017\n\n\n\n\n\n\n\nAnalysis\n\n\nCollection\n\n\nEvent Registration and Recording\n\n\n\n\n\n\nMetrics Overview\n\n\nNon-Event Metrics\n\n\nList of Events Currently Recorded\n\n\nReferences\n\n\n\n\n\n\n\nThis is the metrics collection plan for Lockbox's alpha release. It documents all events currently collected through telemetry, as well those planned for collection but not currently implemented. It will be updated to reflect all new and planned data collection.\n\n\nAnalysis\n\n\nData collection is done solely for the purpose of product development, improvement and maintenance. We are particularly interested in data that will help us answer the following questions.\n\n\n\n\nDo people Save Passwords in Lockbox?\n\n\nHow many? (measured by count of items saved per user)\n\n\nHow often? (number of credentials saved per user per time interval)\n\n\n\n\n\n\nDo people create their own passwords or use Lockbox to generate them?\n\n\nRatio: (Number of times the PW generator is used when storing an item) / (number of credentials stored)\n\n\n\n\n\n\nDo people use the passwords they store on Lockbox?\n\n\nHow many times (per some unit of time) do stored credentials get auto-filled or copied to the clipboard?\n\n\nHow many times do users click to reveal a password?\n\n\n\n\n\n\nHow well does does auto-filling credentials work \n(not in alpha)\n?\n\n\nWhen credentials are auto-filled, are they filled into the correct fields?\n\n\nHow often must the user make a change to what fields were filled?\n\n\nHow to measure these things??? is there an easier way than just asking if the auto-fill didn't work?\n\n\n\n\n\n\n\n\n\n\nDo people continue to use Lockbox after first use?\n\n\nOut of those who install, how many use it more than once?\n\n\n\n\n\n\nWhere are the drop-off points in the user flow?\n\n\nDo the majority of people make it all the way through the setup process?\n\n\nOnce initially setup, do people continue to add credentials?\n\n\n\n\n\n\nWhat are people's opinions on LB\n\n\nFeedback forms\n\n\n\n\n\n\nDo people sync their passwords \n(not in alpha)\n?\n\n\nHow does syncing affect engagement?\n\n\n\n\n\n\nWhat type of sites do people use Lockbox with?\n\n\nDo they use Lockbox only for their most sensitive accounts?\n\n\n\n\n\n\n\n\nCollection\n\n\nNote:\n \nThis is the collection plan for our internal alpha release. For our beta release will be taking advantage of test pilot's telemetry API. The metrics plan for beta will be described in a separate document.\n\n\nAt this point, all measurements related to Lockbox will be made client-side. However, future releases will give users the option to sync their Lockbox data via an FxA account, at which point additional measurements will be logged server-side through the FxA data pipeline. We are not directly responsible for the measurements made through that mechanism.\n\n\nFor our internal alpha release, we will be making use of the public JavaScript API that allows recording and sending of event data through an add-on. \nThis means that for our alpha release we will only be collecting event-based data\n. The API is documented here:\n\n\nhttps://firefox-source-docs.mozilla.org/toolkit/components/telemetry/telemetry/collection/events.html#the-api\n\n\nOnce the events are logged in the client they should appear in \nabout:telemetry\n. From there they will be submitted in the main ping payload under \nprocesses.dynamic.events\n and available through the usual services (STMO and ATMO), as well as amplitude.\n\n\nEvent Registration and Recording\n\n\nThe events that we will record will conform to the structure expected by the telemetry pipeline. When the events are logged in telemetry they will be a list of:\n\n\n[timestamp, category, method, object, value, extra]\n\n\nThe API takes care of the timestamp for us. We just need to define \ncategory\n, \nmethod\n, \nobject\n and \nextra\n (\nvalue\n is optional and we won't use it).\n\n\nBecause we are using the API through an add-on it \nisn't\n necessary that we include an events.yaml file.\n\n\nInstead we will define our events by \nregistering\n them using a call to \nServices.telemetry.registerEvents(category, eventData)\n.\n\n\nHere's a breakdown of how a to register a typical event:\n\n\nServices.telemetry.registerEvents(\nevent_category\n, {\n    \nevent_name\n: {\n        methods: [\nclick\n, ... ], // types of events that can occur\n        objects: [\na_button\n, ... ], // objects event can occur on\n        extra: {\nkey\n: \nvalue\n, ... } // key-value pairs (strings)\n    }\n\n\n\n\nFor our purposes, we will use the \nextra\n field for a few purposes:\n\n\n\n\nTo log the FxA user id of the client logging the event (e.g. \n\"fxauid\": uid\n)\n\n\nTo log the UUID of the item that has been added or changed (e.g. \n\"item_id\": UUID\n)\n\n\nTo log the fields that are modified when an item is updated in the datastore (e.g. \n\"fields\": \"password,notes\"\n  (because the value has to be a string we will have to concat the fields that were updated somehow)\n\n\n\n\nOnce an event is registered, we can record it with:\n\n\nServices.telemetry.recordEvent(category, method, object, null, extra)\n\n\nWhen recording, we can use \nnull\n for \nvalue\n.\n\n\nSee the Events section for specific examples of event registration and recording.\n\n\nMetrics Overview\n\n\n(this section may redundant with analysis section)\nFor alpha, we'd like to (ideally) like to be able to track the following general categories of things:\n\n\n\n\nThe setup flow, so we can know at what points (if any) people quit the flow before finishing it\n\n\nTop-level interactions centered around use of the Lockbox toolbar icon. This includes interactions within the initial doorhanger that is displayed when the user clicks the icon.\n\n\nInteractions with the list of the user's Lockbox items (credentials)\n\n\nInteractions with the add / modify dialogs used to enter / edit item information\n\n\nChanges to the datastore that actually contains the user's items, in addition to user actions that lead to those changes\n\n\nWhen the user submits feedback about Lockbox\n\n\nUsage of the copy and reveal functions for stored Lockbox items.\n\n\n\n\nEach of these are described below within their own Events subsection.\n\n\nNon-Event Metrics\n\n\nThese are the metrics we plan to collect regarding the state of user datastores. Note that we won't be able to record these directly for alpha. We will have to infer them from the event data.\n\n\n\n\n\n\nn_items\n The number of credentials that exist in the user's datastore. Integer\n\n\n\n\n\n\nn_notes\n The number of items for which the user has manually entered custom notes for. Integer\n\n\n\n\n\n\ntimestamp_last\n The timestamp of the last edit the user made to the datastore. Does not necessarily correspond to the last time they opened the CRUD editor.\n\n\n\n\n\n\nn_uses\n The number of times a user copied or auto-filled a Lockbox item.\n\n\n\n\n\n\nList of Events Currently Recorded\n\n\nAll events are currently implemented under the \ncategory: lockboxV0\n. The \nextra\n field always contains \nfxauid\n where possible (i.e. after FxA auth). For events pertaining to a particular Lockbox item, \nitemid\n is also included. They are listed and grouped together based on the contents of the event's \nmethod\n field.\n\n\n\n\n\n\nstartup\n fires when the webextension is loaded. \nobjects\n: webextension. Note that this event fires whenever the browser is started, so is not indicative of direct user interaction with Lockbox.\n\n\n\n\n\n\niconClick\n fires when someone clicks the toolbar icon. \nobjects\n: toolbar\n\n\n\n\n\n\nrender\n events fire when the firstrun view (showing the initial Lockbox setup form), item manager or doorhanger (when implemented) are rendered. \nobjects\n: firstrun, manage, doorhanger\n\n\n\n\n\n\nitemAdding\n, \nitemUpdating\n, \nitemDeleting\n fire when a user clicks to submit a new item or edit or delete an existing item. \nobjects\n: addItemForm, updatingItemForm\n\n\n\n\n\n\nitemAdded\n, \nitemUpdated\n, \nitemDeleted\n fire after a successful add/update/delete action. \nobjects\n: addItemForm, updatingItemForm\n\n\n\n\n\n\nadded\n, \nupdated\n, \ndeleted\n fire when an item is added/updated/deleted in the backend datastore. Has itemid in the extra field. \nobjects\n: datastore\n\n\n\n\n\n\nitemSelected\n fires when a user clicks an item in the itemlist. \nobjects\n itemList  \n\n\n\n\n\n\nusernameCopied\n and \npasswordCopied\n fire when a user copies their username or password from an item. \nobjects\n: itemDetails\n\n\n\n\n\n\nfeedbackClick\n fires when the user clicks the \"Send Feedback\" button. \nobjects\n: manage\n\n\n\n\n\n\nresetRequested\n fires when the user clicks the \"Reset\" button in the Lockbox settings. \nobjects\n: settings\n\n\n\n\n\n\nresetCompleted\n fires when the user completes a reset of their Lockbox data in the Lockbox settings. \nobjects\n: settings\n\n\n\n\n\n\nList of Planned Events\n\n\nThese events will be implemented once the corresponding functionality is available.\n\n\n\n\n\n\nfxaSignIn\n fires when someone clicks the signin button during firstrun. \nobjects\n: fxaSignInPage.\n\n\n\n\n\n\nconfirmPW\n fires when the user clicks the button to confirm their FxA pw. \nobjects\n: confirmPWButton\n\n\n\n\n\n\ndoorhangerItemSelected\n fires when a user clicks an item in the doorhanger's itemlist. \nobjects\n doorhanger  \n\n\n\n\n\n\ndoorhangerItemCopied\n fires when a user copies an item's username/password from the doorhanger's entry view. \nobjects\n doorhangerEntryDetails.  \n\n\n\n\n\n\ndoorhangerAddClick\n fires when the user clicks to add a new entry from the doorhanger. \nobjects\n doorhanger  \n\n\n\n\n\n\n\n\nReferences\n\n\nDocs for the Public JS API that allows us to log events thru an add-on:\n\n\nhttps://firefox-source-docs.mozilla.org/toolkit/components/telemetry/telemetry/collection/events.html#the-api", 
            "title": "Metrics Guide"
        }, 
        {
            "location": "/metrics/#lockbox-metrics-plan", 
            "text": "Last Updated: Nov 28, 2017    Analysis  Collection  Event Registration and Recording    Metrics Overview  Non-Event Metrics  List of Events Currently Recorded  References    This is the metrics collection plan for Lockbox's alpha release. It documents all events currently collected through telemetry, as well those planned for collection but not currently implemented. It will be updated to reflect all new and planned data collection.", 
            "title": "Lockbox Metrics Plan"
        }, 
        {
            "location": "/metrics/#analysis", 
            "text": "Data collection is done solely for the purpose of product development, improvement and maintenance. We are particularly interested in data that will help us answer the following questions.   Do people Save Passwords in Lockbox?  How many? (measured by count of items saved per user)  How often? (number of credentials saved per user per time interval)    Do people create their own passwords or use Lockbox to generate them?  Ratio: (Number of times the PW generator is used when storing an item) / (number of credentials stored)    Do people use the passwords they store on Lockbox?  How many times (per some unit of time) do stored credentials get auto-filled or copied to the clipboard?  How many times do users click to reveal a password?    How well does does auto-filling credentials work  (not in alpha) ?  When credentials are auto-filled, are they filled into the correct fields?  How often must the user make a change to what fields were filled?  How to measure these things??? is there an easier way than just asking if the auto-fill didn't work?      Do people continue to use Lockbox after first use?  Out of those who install, how many use it more than once?    Where are the drop-off points in the user flow?  Do the majority of people make it all the way through the setup process?  Once initially setup, do people continue to add credentials?    What are people's opinions on LB  Feedback forms    Do people sync their passwords  (not in alpha) ?  How does syncing affect engagement?    What type of sites do people use Lockbox with?  Do they use Lockbox only for their most sensitive accounts?", 
            "title": "Analysis"
        }, 
        {
            "location": "/metrics/#collection", 
            "text": "Note:   This is the collection plan for our internal alpha release. For our beta release will be taking advantage of test pilot's telemetry API. The metrics plan for beta will be described in a separate document.  At this point, all measurements related to Lockbox will be made client-side. However, future releases will give users the option to sync their Lockbox data via an FxA account, at which point additional measurements will be logged server-side through the FxA data pipeline. We are not directly responsible for the measurements made through that mechanism.  For our internal alpha release, we will be making use of the public JavaScript API that allows recording and sending of event data through an add-on.  This means that for our alpha release we will only be collecting event-based data . The API is documented here:  https://firefox-source-docs.mozilla.org/toolkit/components/telemetry/telemetry/collection/events.html#the-api  Once the events are logged in the client they should appear in  about:telemetry . From there they will be submitted in the main ping payload under  processes.dynamic.events  and available through the usual services (STMO and ATMO), as well as amplitude.", 
            "title": "Collection"
        }, 
        {
            "location": "/metrics/#event-registration-and-recording", 
            "text": "The events that we will record will conform to the structure expected by the telemetry pipeline. When the events are logged in telemetry they will be a list of:  [timestamp, category, method, object, value, extra]  The API takes care of the timestamp for us. We just need to define  category ,  method ,  object  and  extra  ( value  is optional and we won't use it).  Because we are using the API through an add-on it  isn't  necessary that we include an events.yaml file.  Instead we will define our events by  registering  them using a call to  Services.telemetry.registerEvents(category, eventData) .  Here's a breakdown of how a to register a typical event:  Services.telemetry.registerEvents( event_category , {\n     event_name : {\n        methods: [ click , ... ], // types of events that can occur\n        objects: [ a_button , ... ], // objects event can occur on\n        extra: { key :  value , ... } // key-value pairs (strings)\n    }  For our purposes, we will use the  extra  field for a few purposes:   To log the FxA user id of the client logging the event (e.g.  \"fxauid\": uid )  To log the UUID of the item that has been added or changed (e.g.  \"item_id\": UUID )  To log the fields that are modified when an item is updated in the datastore (e.g.  \"fields\": \"password,notes\"   (because the value has to be a string we will have to concat the fields that were updated somehow)   Once an event is registered, we can record it with:  Services.telemetry.recordEvent(category, method, object, null, extra)  When recording, we can use  null  for  value .  See the Events section for specific examples of event registration and recording.", 
            "title": "Event Registration and Recording"
        }, 
        {
            "location": "/metrics/#metrics-overview", 
            "text": "(this section may redundant with analysis section)\nFor alpha, we'd like to (ideally) like to be able to track the following general categories of things:   The setup flow, so we can know at what points (if any) people quit the flow before finishing it  Top-level interactions centered around use of the Lockbox toolbar icon. This includes interactions within the initial doorhanger that is displayed when the user clicks the icon.  Interactions with the list of the user's Lockbox items (credentials)  Interactions with the add / modify dialogs used to enter / edit item information  Changes to the datastore that actually contains the user's items, in addition to user actions that lead to those changes  When the user submits feedback about Lockbox  Usage of the copy and reveal functions for stored Lockbox items.   Each of these are described below within their own Events subsection.", 
            "title": "Metrics Overview"
        }, 
        {
            "location": "/metrics/#non-event-metrics", 
            "text": "These are the metrics we plan to collect regarding the state of user datastores. Note that we won't be able to record these directly for alpha. We will have to infer them from the event data.    n_items  The number of credentials that exist in the user's datastore. Integer    n_notes  The number of items for which the user has manually entered custom notes for. Integer    timestamp_last  The timestamp of the last edit the user made to the datastore. Does not necessarily correspond to the last time they opened the CRUD editor.    n_uses  The number of times a user copied or auto-filled a Lockbox item.", 
            "title": "Non-Event Metrics"
        }, 
        {
            "location": "/metrics/#list-of-events-currently-recorded", 
            "text": "All events are currently implemented under the  category: lockboxV0 . The  extra  field always contains  fxauid  where possible (i.e. after FxA auth). For events pertaining to a particular Lockbox item,  itemid  is also included. They are listed and grouped together based on the contents of the event's  method  field.    startup  fires when the webextension is loaded.  objects : webextension. Note that this event fires whenever the browser is started, so is not indicative of direct user interaction with Lockbox.    iconClick  fires when someone clicks the toolbar icon.  objects : toolbar    render  events fire when the firstrun view (showing the initial Lockbox setup form), item manager or doorhanger (when implemented) are rendered.  objects : firstrun, manage, doorhanger    itemAdding ,  itemUpdating ,  itemDeleting  fire when a user clicks to submit a new item or edit or delete an existing item.  objects : addItemForm, updatingItemForm    itemAdded ,  itemUpdated ,  itemDeleted  fire after a successful add/update/delete action.  objects : addItemForm, updatingItemForm    added ,  updated ,  deleted  fire when an item is added/updated/deleted in the backend datastore. Has itemid in the extra field.  objects : datastore    itemSelected  fires when a user clicks an item in the itemlist.  objects  itemList      usernameCopied  and  passwordCopied  fire when a user copies their username or password from an item.  objects : itemDetails    feedbackClick  fires when the user clicks the \"Send Feedback\" button.  objects : manage    resetRequested  fires when the user clicks the \"Reset\" button in the Lockbox settings.  objects : settings    resetCompleted  fires when the user completes a reset of their Lockbox data in the Lockbox settings.  objects : settings", 
            "title": "List of Events Currently Recorded"
        }, 
        {
            "location": "/metrics/#list-of-planned-events", 
            "text": "These events will be implemented once the corresponding functionality is available.    fxaSignIn  fires when someone clicks the signin button during firstrun.  objects : fxaSignInPage.    confirmPW  fires when the user clicks the button to confirm their FxA pw.  objects : confirmPWButton    doorhangerItemSelected  fires when a user clicks an item in the doorhanger's itemlist.  objects  doorhanger      doorhangerItemCopied  fires when a user copies an item's username/password from the doorhanger's entry view.  objects  doorhangerEntryDetails.      doorhangerAddClick  fires when the user clicks to add a new entry from the doorhanger.  objects  doorhanger", 
            "title": "List of Planned Events"
        }, 
        {
            "location": "/metrics/#references", 
            "text": "Docs for the Public JS API that allows us to log events thru an add-on:  https://firefox-source-docs.mozilla.org/toolkit/components/telemetry/telemetry/collection/events.html#the-api", 
            "title": "References"
        }, 
        {
            "location": "/releases/", 
            "text": "Releases\n\n\nChecklist\n\n\nBefore a release can be made, the following must be done:\n\n\n\n\nAny user stories labeled as \nepic\n to be included in the release are approved by Product and PI\n\n\nAll finished work is verified to work as expected and committed to \nmaster\n\n\nAny unfinished work has been triaged and assigned to the appropriate milestone\n\n\nProduct, Engineering, and PI have voiced approval to release (e.g., via Slack team channel)\n\n\n\n\nInstructions\n\n\nNOTE:\n these instructions assume:\n\n\n\n\nAll of the \nchecklist items\n are complete\n\n\nYou are an administrator of the project \nlockbox-extension\n\n\nYour local git working copy has a remote named \nupstream\n pointing to \ngit@github.com:mozilla-lockbox/lockbox-extension.git\n\n\n\n\nTo generate the next release binary:\n\n\n\n\nUpdate \"version\" in package.json (and package-lock.json)\n\n\nwe follow the \nsemver\n syntax\n\n\nAlpha\n releases will be labeled with \"-alpha\" (e.g., \"0.1.0-alpha\")\n\n\nBeta\n releases will be labeled with \"-beta\" (e.g., \"1.0.0-beta\")\n\n\nStable\n releases will \nnot\n be labeled, and follow semver from the last Beta release (e.g., \"1.0.0\")\n\n\n\n\n\n\nUpdate \ndocs/release-notes.md\n:\n\n\nlatest release is at the top, under a second-level header\n\n\neach release includes the sub headings \"What's New\", \"What's Fixed\", and \"Known Issues\"\n\n\nconsult with Product Management on wording if needed\n\n\n\n\n\n\nCommit and ultimately merge to \nmaster\n branch\n\n\nMerge the \nmaster\n branch into \nproduction\n branch and push to GitHub:\n\n\ngit checkout master\n\n\ngit pull upstream master\n (to make sure you have the latest)\n\n\ngit checkout production\n\n\ngit pull upstream production\n (to make sure you have the latest)\n\n\ngit merge master\n\n\ngit push upstream production\n\n\nTest Pilot's Jenkins will now build and sign the extension (see \n\"Extension Signing\"\n)\n\n\n\n\n\n\nTag the latest commit on \nproduction\n branch with an annotated version and push the tag:\n\n\ngit tag -a -m \"Release 0.1.0\" 0.1.0\n\n\ngit push upstream 0.1.0\n\n\nTravis-CI will build and generate a GitHub Release\n\n\n\n\n\n\nEdit the resulting GitHub Release\n\n\nSet the GitHub Release title to match the version\n\n\nSet the GitHub Release notes to match the \ndocs/release-notes.md\n\n\nDownload the signed add-on: \nwget -O signed-addon.xpi https://testpilot.firefox.com/files/lockbox@mozilla.com/latest\n\n\nAttach to the GitHub Release the downloaded signed add-on\n\n\n\n\n\n\nSend an announcement to the team (e.g., via Slack team channel)\n\n\n\n\nExtension Signing\n\n\nLearn about the Test Pilot extension deployment and hosting process here:\n\nhttps://github.com/mozilla/testpilot/blob/master/docs/development/hosting.md\n\n\nThis repository is in the \n\"testpilot-mozillaextension\"\n Jenkins pipeline.\nThe CloudOps team manages access to, and can help report on, the status of the\nbuilds.\n\n\nThe resulting files deployed are:\n\n\n\n\nUpdates file for automatic browser extension updates: \nhttps://testpilot.firefox.com/files/lockbox@mozilla.com/updates.json\n\n\nLatest version of the signed extension XPI: \nhttps://testpilot.firefox.com/files/lockbox@mozilla.com/latest\n\n\n\n\nIMPORTANT:\n Test Pilot reports the status of build, signing, and deployment of its artifacts on the IRC channel \n#testpilot-bots\n.  Be sure to join the channel prior to pushing the \nproduction\n branch to GitHub in order to receive the status updates.", 
            "title": "Releases"
        }, 
        {
            "location": "/releases/#releases", 
            "text": "", 
            "title": "Releases"
        }, 
        {
            "location": "/releases/#checklist", 
            "text": "Before a release can be made, the following must be done:   Any user stories labeled as  epic  to be included in the release are approved by Product and PI  All finished work is verified to work as expected and committed to  master  Any unfinished work has been triaged and assigned to the appropriate milestone  Product, Engineering, and PI have voiced approval to release (e.g., via Slack team channel)", 
            "title": "Checklist"
        }, 
        {
            "location": "/releases/#instructions", 
            "text": "NOTE:  these instructions assume:   All of the  checklist items  are complete  You are an administrator of the project  lockbox-extension  Your local git working copy has a remote named  upstream  pointing to  git@github.com:mozilla-lockbox/lockbox-extension.git   To generate the next release binary:   Update \"version\" in package.json (and package-lock.json)  we follow the  semver  syntax  Alpha  releases will be labeled with \"-alpha\" (e.g., \"0.1.0-alpha\")  Beta  releases will be labeled with \"-beta\" (e.g., \"1.0.0-beta\")  Stable  releases will  not  be labeled, and follow semver from the last Beta release (e.g., \"1.0.0\")    Update  docs/release-notes.md :  latest release is at the top, under a second-level header  each release includes the sub headings \"What's New\", \"What's Fixed\", and \"Known Issues\"  consult with Product Management on wording if needed    Commit and ultimately merge to  master  branch  Merge the  master  branch into  production  branch and push to GitHub:  git checkout master  git pull upstream master  (to make sure you have the latest)  git checkout production  git pull upstream production  (to make sure you have the latest)  git merge master  git push upstream production  Test Pilot's Jenkins will now build and sign the extension (see  \"Extension Signing\" )    Tag the latest commit on  production  branch with an annotated version and push the tag:  git tag -a -m \"Release 0.1.0\" 0.1.0  git push upstream 0.1.0  Travis-CI will build and generate a GitHub Release    Edit the resulting GitHub Release  Set the GitHub Release title to match the version  Set the GitHub Release notes to match the  docs/release-notes.md  Download the signed add-on:  wget -O signed-addon.xpi https://testpilot.firefox.com/files/lockbox@mozilla.com/latest  Attach to the GitHub Release the downloaded signed add-on    Send an announcement to the team (e.g., via Slack team channel)", 
            "title": "Instructions"
        }, 
        {
            "location": "/releases/#extension-signing", 
            "text": "Learn about the Test Pilot extension deployment and hosting process here: \nhttps://github.com/mozilla/testpilot/blob/master/docs/development/hosting.md  This repository is in the  \"testpilot-mozillaextension\"  Jenkins pipeline.\nThe CloudOps team manages access to, and can help report on, the status of the\nbuilds.  The resulting files deployed are:   Updates file for automatic browser extension updates:  https://testpilot.firefox.com/files/lockbox@mozilla.com/updates.json  Latest version of the signed extension XPI:  https://testpilot.firefox.com/files/lockbox@mozilla.com/latest   IMPORTANT:  Test Pilot reports the status of build, signing, and deployment of its artifacts on the IRC channel  #testpilot-bots .  Be sure to join the channel prior to pushing the  production  branch to GitHub in order to receive the status updates.", 
            "title": "Extension Signing"
        }
    ]
}